<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PowerStage">
    <Style
        x:Key="ButtonFocusVisual">
        <Setter
            Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="BorderBrush" Value="#EECCCCCC" />
        <Setter Property="Background" Value="#EECCCCCC"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10 5"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                                x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="OpacityMask" Value="#AA888888"/>
                            <Setter Property="Margin" Value="2 1" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#FF7A7A7A" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="circlularToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>


                        <Viewbox>
                            <Grid>

                                <Ellipse x:Name="ellipse" Width="200" Height="200" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeThickness="10" StrokeLineJoin="Round" Opacity="1" Stroke="#FFA8A8A8" />

                                <Ellipse x:Name="inside" Width="200" Height="200" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeLineJoin="Round" Opacity="1" Fill="{TemplateBinding Background}"   />
                                <Ellipse x:Name="inside_overlay" Width="200" Height="200" Canvas.Left="0" Canvas.Top="0" Stretch="Fill" StrokeLineJoin="Round" Opacity="0" Fill="White"   />
                                


                            </Grid>
                        </Viewbox>

                        <ContentPresenter
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <!--<Trigger Property="IsDefaulted" Value="True" />-->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="inside_overlay" Property="Opacity" Value=".4" />
                            <Setter TargetName="inside" Property="Fill" >
                                <Setter.Value>
                                    <SolidColorBrush Color="Gray" />
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="inside_overlay" Property="Opacity" Value=".4" />
                            <Setter TargetName="inside" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="50" ShadowDepth="0" RenderingBias="Quality"  Color="White" Opacity=".5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="inside" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect BlurRadius="50" ShadowDepth="0" RenderingBias="Quality"  Color="White" Opacity=".75" />
                                </Setter.Value>
                            </Setter>
                            <!--<Setter TargetName="arrow" Property="Effect">
                                    <Setter.Value>
                                        <BlurEffect Radius="30" RenderingBias="Quality" />
                                    </Setter.Value>
                                </Setter>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>